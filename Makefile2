# Compiler and linker - Use g++ on Linux, Windows and clang++ on Mac OS X
CXX        = g++
# Compiler options - Wall for all warnings, std=c++17 for C++17
CXXFLAGS   = -Wall  -std=c++17
# Dependency flags - Include .d files generated by the compiler
DEPFLAGS   = -MMD
# Linker flags for SDL - Adjust the path to your SDL2 library and other necessary flags
LDFLAGS    = -lpthread -Lsrc/lib -lmingw32 -lSDL2main -lSDL2
# Include flags for SDL - Adjust the path to your SDL2 include directory
INCLUDE    = -Isrc/Include
# Build directory
BUILDIR    = build
# Executable directory
BINDIR     = bin
# Source files - All .cpp files required to build the executable
SRC_FILES  = Road.cpp TrafficLightEngine.cpp Vehicle.cpp main.cpp 
# Object files - All .o files generated from the source files
OBJ_FILES  = $(patsubst %.cpp, $(BUILDIR)/%.o, $(SRC_FILES))
# Target - The path to the executable
TARGET     = $(BINDIR)/app.exe
# Dependencies - All .d files generated by the compiler
DEPS       = $(OBJ_FILES:.o=.d)

all: $(TARGET)

# Link object files to executable into the bin directory
$(TARGET): $(OBJ_FILES)
	@if not exist $(BINDIR) mkdir $(BINDIR)
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $(TARGET) $(OBJ_FILES)

# Compile source files to object files into the build directory
$(BUILDIR)/%.o: %.cpp
	@if not exist $(BUILDIR) mkdir $(BUILDIR)
	$(CXX) $(CXXFLAGS) $(DEPFLAGS) $(INCLUDE) -c $< -o $@

# Clean up the build and bin directories
clean:
	-del /Q /S $(BUILDIR) $(BINDIR) 2>nul

# Include the dependencies generated by the compiler
-include $(DEPS)

# Phony targets
.PHONY: all clean
